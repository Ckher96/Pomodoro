{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ckher\\\\OneDrive\\\\Desktop\\\\React Projects\\\\Pomodoro_timer\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Status from \"./Status\"; // These functions are defined outside of the component to ensure they do not have access to state\n// and are, therefore, more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return { ...prevState,\n    timeRemaining\n  };\n}\n/**\n * Higher-order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60\n      };\n    }\n\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null); // ToDo: Allow the user to adjust the focus and break duration.\n\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n\n  function changeFocusTime({\n    target\n  }) {\n    console.log(target);\n    console.log(target.id);\n\n    if (target.id === 'increase-focus' || target.id === 'increase-focus-span') {\n      if (focusDuration < 60) {\n        setFocusDuration(focusDuration + 5);\n      }\n    }\n\n    if (target.id === 'decrease-focus' || target.id === 'decrease-focus-span') {\n      if (focusDuration > 5) {\n        setFocusDuration(focusDuration - 5);\n      }\n    }\n  }\n\n  function changeBreakTime({\n    target\n  }) {\n    if (target.id === 'increase-break' || target.id === 'increase-break-span') {\n      if (breakDuration < 15) {\n        setBreakDuration(breakDuration + 1);\n      }\n    }\n\n    if (target.id === 'decrease-break' || target.id === 'decrease-break-span') {\n      if (breakDuration > 1) {\n        setBreakDuration(breakDuration - 1);\n      }\n    }\n  }\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You won't need to make changes to the callback function\n   */\n\n\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      //new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    return setSession(nextTick);\n  }, isTimerRunning ? 10 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", focusDuration), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: changeFocusTime,\n    id: \"decrease-focus\",\n    disabled: session,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    id: \"decrease-focus-span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: changeFocusTime,\n    id: \"increase-focus\",\n    disabled: session,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    id: \"increase-focus-span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", breakDuration), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: changeBreakTime,\n    id: \"decrease-break\",\n    disabled: session,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    id: \"decrease-break-span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: changeBreakTime,\n    id: \"increase-break\",\n    disabled: session,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    id: \"increase-break-span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(Status, {\n    session: session,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/ckher/OneDrive/Desktop/React Projects/Pomodoro_timer/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","Status","nextTick","prevState","timeRemaining","Math","max","nextSession","focusDuration","breakDuration","currentSession","label","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","setFocusDuration","setBreakDuration","changeFocusTime","target","console","log","id","changeBreakTime","playPause","nextState","prevStateSession"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AAC3B,QAAMC,aAAa,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,SAAS,CAACC,aAAV,GAA0B,CAAtC,CAAtB;AACA,SAAO,EACL,GAAGD,SADE;AAELC,IAAAA;AAFK,GAAP;AAID;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,WAAT,CAAqBC,aAArB,EAAoCC,aAApC,EAAmD;AACjD;AACF;AACA;AACE,SAAQC,cAAD,IAAoB;AAEzB,QAAIA,cAAc,CAACC,KAAf,KAAyB,UAA7B,EAAyC;AAEvC,aAAO;AACLA,QAAAA,KAAK,EAAE,UADF;AAELP,QAAAA,aAAa,EAAEK,aAAa,GAAG;AAF1B,OAAP;AAKD;;AACD,WAAO;AACLE,MAAAA,KAAK,EAAE,UADF;AAELP,MAAAA,aAAa,EAAEI,aAAa,GAAG;AAF1B,KAAP;AAID,GAdD;AAeD;;AAED,SAASI,QAAT,GAAoB;AAClB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,KAAD,CAApD,CAFkB,CAGlB;;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC,CAJkB,CAMlB;;AAEA,QAAM,CAACU,aAAD,EAAeS,gBAAf,IAAmCnB,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAACW,aAAD,EAAeS,gBAAf,IAAmCpB,QAAQ,CAAC,CAAD,CAAjD;;AAEA,WAASqB,eAAT,CAAyB;AAACC,IAAAA;AAAD,GAAzB,EAAmC;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,EAAnB;;AACA,QAAIH,MAAM,CAACG,EAAP,KAAc,gBAAd,IAAkCH,MAAM,CAACG,EAAP,KAAc,qBAApD,EAA2E;AACzE,UAAIf,aAAa,GAAG,EAApB,EAAwB;AACtBS,QAAAA,gBAAgB,CAACT,aAAa,GAAG,CAAjB,CAAhB;AACD;AACF;;AACD,QAAIY,MAAM,CAACG,EAAP,KAAc,gBAAd,IAAkCH,MAAM,CAACG,EAAP,KAAc,qBAApD,EAA2E;AACzE,UAAGf,aAAa,GAAG,CAAnB,EAAsB;AACpBS,QAAAA,gBAAgB,CAACT,aAAa,GAAG,CAAjB,CAAhB;AACD;AACF;AACF;;AAED,WAASgB,eAAT,CAAyB;AAACJ,IAAAA;AAAD,GAAzB,EAAmC;AACjC,QAAIA,MAAM,CAACG,EAAP,KAAc,gBAAd,IAAkCH,MAAM,CAACG,EAAP,KAAc,qBAApD,EAA2E;AACzE,UAAId,aAAa,GAAG,EAApB,EAAwB;AACtBS,QAAAA,gBAAgB,CAACT,aAAa,GAAG,CAAjB,CAAhB;AACD;AACF;;AACD,QAAIW,MAAM,CAACG,EAAP,KAAc,gBAAd,IAAkCH,MAAM,CAACG,EAAP,KAAc,qBAApD,EAA2E;AACzE,UAAId,aAAa,GAAG,CAApB,EAAuB;AACrBS,QAAAA,gBAAgB,CAACT,aAAa,GAAG,CAAjB,CAAhB;AACD;AACF;AACF;AACD;AACF;AACA;AACA;AACA;;;AACET,EAAAA,WAAW,CAAC,MAAM;AACd,QAAIe,OAAO,CAACX,aAAR,KAA0B,CAA9B,EAAiC;AAC/B;AACA,aAAOY,UAAU,CAACT,WAAW,CAACC,aAAD,EAAgBC,aAAhB,CAAZ,CAAjB;AACD;;AACD,WAAOO,UAAU,CAACd,QAAD,CAAjB;AACD,GANQ,EAOTW,cAAc,GAAG,EAAH,GAAQ,IAPb,CAAX;AAWA;AACF;AACA;;AACE,WAASY,SAAT,GAAqB;AAEnBX,IAAAA,iBAAiB,CAAEX,SAAD,IAAe;AAC/B,YAAMuB,SAAS,GAAG,CAACvB,SAAnB;;AACA,UAAIuB,SAAJ,EAAe;AACbV,QAAAA,UAAU,CAAEW,gBAAD,IAAsB;AAC/B;AACA;AACA,cAAIA,gBAAgB,KAAK,IAAzB,EAA+B;AAC7B,mBAAO;AACLhB,cAAAA,KAAK,EAAE,UADF;AAELP,cAAAA,aAAa,EAAEI,aAAa,GAAG;AAF1B,aAAP;AAKD;;AACD,iBAAOmB,gBAAP;AACD,SAXS,CAAV;AAaD;;AAED,aAAOD,SAAP;AACD,KAnBgB,CAAjB;AAoBD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBlB,aAFnB,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAEW,eAJX;AAKE,IAAA,EAAE,EAAC,gBALL;AAME,IAAA,QAAQ,EAAEJ,OANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,EAAE,EAAC,qBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFF,eAaE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAEI,eAJX;AAKE,IAAA,EAAE,EAAC,gBALL;AAME,IAAA,QAAQ,EAAEJ,OANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,EAAE,EAAC,qBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAbF,CALF,CADF,CADF,eAiCE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBN,aAFnB,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAEe,eAJX;AAKE,IAAA,EAAE,EAAC,gBALL;AAME,IAAA,QAAQ,EAAET,OANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,EAAE,EAAC,qBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFF,eAaE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,mBAAY,gBAHd;AAIE,IAAA,OAAO,EAAES,eAJX;AAKE,IAAA,EAAE,EAAC,gBALL;AAME,IAAA,QAAQ,EAAET,OANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,EAAE,EAAC,qBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAbF,CALF,CADF,CADF,CAjCF,CADF,eAsEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,OAAjB;AAA0B,IAAA,aAAa,EAAEP,aAAzC;AAAwD,IAAA,aAAa,EAAEC,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtEF,CADF;AA0ED;;AAED,eAAeG,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport Status from \"./Status\";\n\n// These functions are defined outside of the component to ensure they do not have access to state\n// and are, therefore, more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher-order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n            \n    if (currentSession.label === \"Focusing\") {\n      \n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n        \n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  \n  const [focusDuration,setFocusDuration] = useState(25);\n  const [breakDuration,setBreakDuration] = useState(5);\n\n  function changeFocusTime({target}) {\n    console.log(target)\n    console.log(target.id)\n    if (target.id === 'increase-focus' || target.id === 'increase-focus-span') {\n      if (focusDuration < 60) {\n        setFocusDuration(focusDuration + 5)\n      }\n    }\n    if (target.id === 'decrease-focus' || target.id === 'decrease-focus-span') {\n      if(focusDuration > 5) {\n        setFocusDuration(focusDuration - 5)\n      }\n    }\n  }\n  \n  function changeBreakTime({target}) {\n    if (target.id === 'increase-break' || target.id === 'increase-break-span') {\n      if (breakDuration < 15) {\n        setBreakDuration(breakDuration + 1)\n      }\n    }\n    if (target.id === 'decrease-break' || target.id === 'decrease-break-span') {\n      if (breakDuration > 1) {\n        setBreakDuration(breakDuration - 1)\n      }\n    }\n  }\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You won't need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        //new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 10 : null\n  );\n\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    \n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n            \n          }\n          return prevStateSession;\n        });\n        \n      }\n      \n      return nextState;\n    });\n  }\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {focusDuration}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={changeFocusTime}\n                id=\"decrease-focus\"\n                disabled={session}\n              >\n                <span className=\"oi oi-minus\" id='decrease-focus-span' />\n              </button>\n              {/* TODO: Implement increasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={changeFocusTime}\n                id=\"increase-focus\"\n                disabled={session}\n              >\n                <span className=\"oi oi-plus\" id='increase-focus-span' />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {breakDuration}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={changeBreakTime}\n                  id=\"decrease-break\"\n                  disabled={session}\n                >\n                  <span className=\"oi oi-minus\" id='decrease-break-span'/>\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={changeBreakTime}\n                  id=\"increase-break\"\n                  disabled={session}\n                >\n                  <span className=\"oi oi-plus\" id='increase-break-span'/>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <Status session={session} focusDuration={focusDuration} breakDuration={breakDuration} />\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}