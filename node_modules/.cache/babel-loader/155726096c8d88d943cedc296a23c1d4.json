{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ckher\\\\OneDrive\\\\Desktop\\\\React Projects\\\\Pomodoro_timer\\\\src\\\\pomodoro\\\\Status.js\";\nimport React from \"react\";\n\nfunction Status({\n  session,\n  focusDuration,\n  breakDuration\n}) {\n  {\n    session ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 4,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2 false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    }, session === null || session === void 0 ? void 0 : session.label, \" for \", minutesToDuration((session === null || session === void 0 ? void 0 : session.timeRemaining) / 60), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(ProgressBar, {\n      session: session,\n      focusDuration: focusDuration,\n      breakDuration: breakDuration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    })) : '';\n  }\n}","map":{"version":3,"sources":["C:/Users/ckher/OneDrive/Desktop/React Projects/Pomodoro_timer/src/pomodoro/Status.js"],"names":["React","Status","session","focusDuration","breakDuration","label","minutesToDuration","timeRemaining","secondsToDuration"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA,OAAD;AAAUC,EAAAA,aAAV;AAAyBC,EAAAA;AAAzB,CAAhB,EAAyD;AACrD;AAACF,IAAAA,OAAO,gBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAER;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,aACGA,OADH,uBACGA,OAAO,CAAEG,KADZ,WACwBC,iBAAiB,CAAC,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,aAAT,IAAyB,EAA1B,CADzC,aAFF,eAME;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,iBAAiB,CAACN,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEK,aAAV,CADpB,eANF,CADF,CAFQ,eAcR,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEL,OAAtB;AAA+B,MAAA,aAAa,EAAEC,aAA9C;AAA6D,MAAA,aAAa,EAAEC,aAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdQ,CAAJ,GAeI,EAfX;AAec;AAElB","sourcesContent":["import React from \"react\";\r\n\r\nfunction Status({session, focusDuration, breakDuration}) {\r\n    {session ? (<div>\r\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\r\n        <div className='row mb-2 false'>\r\n          <div className=\"col\">\r\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n            <h2 data-testid=\"session-title\">\r\n              {session?.label} for {minutesToDuration(session?.timeRemaining / 60)} minutes\r\n            </h2>\r\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n              {secondsToDuration(session?.timeRemaining)} remaining\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <ProgressBar session={session} focusDuration={focusDuration} breakDuration={breakDuration}/>\r\n      </div>) : ''}\r\n      \r\n}"]},"metadata":{},"sourceType":"module"}