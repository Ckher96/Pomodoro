{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ckher\\\\OneDrive\\\\Desktop\\\\React Projects\\\\Pomodoro_timer\\\\src\\\\pomodoro\\\\Status.js\";\nimport React from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport ProgressBar from \"./ProgressBar\";\n\nfunction Status({\n  session,\n  focusDuration,\n  breakDuration,\n  isTimerRunning\n}) {\n  const isPaused = () => isTimerRunning ? '' : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 54\n    }\n  }, \"Paused\");\n\n  if (session) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2 false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, session === null || session === void 0 ? void 0 : session.label, \" for \", minutesToDuration((session === null || session === void 0 ? void 0 : session.timeRemaining) / 60), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"isPaused\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(ProgressBar, {\n      session: session,\n      focusDuration: focusDuration,\n      breakDuration: breakDuration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return '';\n  }\n}\n\nexport default Status;","map":{"version":3,"sources":["C:/Users/ckher/OneDrive/Desktop/React Projects/Pomodoro_timer/src/pomodoro/Status.js"],"names":["React","minutesToDuration","secondsToDuration","ProgressBar","Status","session","focusDuration","breakDuration","isTimerRunning","isPaused","label","timeRemaining"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,SAASC,MAAT,CAAgB;AAACC,EAAAA,OAAD;AAAUC,EAAAA,aAAV;AAAyBC,EAAAA,aAAzB;AAAwCC,EAAAA;AAAxC,CAAhB,EAAyE;AACjE,QAAMC,QAAQ,GAAG,MAAMD,cAAc,GAAG,EAAH,gBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA7C;;AAEA,MAAIH,OAAJ,EAAa;AACT,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAER;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,aACGA,OADH,uBACGA,OAAO,CAAEK,KADZ,WACwBT,iBAAiB,CAAC,CAAAI,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEM,aAAT,IAAyB,EAA1B,CADzC,aAFF,eAME;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,iBAAiB,CAACG,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEM,aAAV,CADpB,eANF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CAFQ,eAgBR,oBAAC,WAAD;AACA,MAAA,OAAO,EAAEN,OADT;AAEA,MAAA,aAAa,EAAEC,aAFf;AAGA,MAAA,aAAa,EAAEC,aAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBQ,CADJ;AAuBH,GAxBD,MAyBK;AACD,WAAO,EAAP;AACH;AAER;;AAED,eAAeH,MAAf","sourcesContent":["import React from \"react\";\r\nimport { minutesToDuration } from \"../utils/duration\";\r\nimport { secondsToDuration } from \"../utils/duration\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\n\r\nfunction Status({session, focusDuration, breakDuration, isTimerRunning}) {\r\n        const isPaused = () => isTimerRunning ? '' : <h2>Paused</h2>\r\n\r\n        if (session) {\r\n            return (\r\n                <div>\r\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\r\n        <div className='row mb-2 false'>\r\n          <div className=\"col\">\r\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n            <h2 data-testid=\"session-title\">\r\n              {session?.label} for {minutesToDuration(session?.timeRemaining / 60)} minutes\r\n            </h2>\r\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\r\n            <p className=\"lead\" data-testid=\"session-sub-title\">\r\n              {secondsToDuration(session?.timeRemaining)} remaining\r\n            </p>\r\n            <isPaused />\r\n          </div>\r\n        </div>\r\n\r\n        <ProgressBar \r\n        session={session}\r\n        focusDuration={focusDuration}\r\n        breakDuration={breakDuration}/>\r\n      </div>\r\n            )\r\n        }\r\n        else {\r\n            return ''\r\n        }\r\n    \r\n}\r\n\r\nexport default Status"]},"metadata":{},"sourceType":"module"}